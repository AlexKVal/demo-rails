{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name admin.gravatar, :imports nil, :requires {r reagent.core, reagent.core reagent.core, gravatar cljs-gravatar.core, cljs-gravatar.core cljs-gravatar.core}, :cljs.spec/speced-vars [], :uses nil, :defs {gravatar-img {:protocol-inline nil, :meta {:file "/Users/alexkval/src/rb/alexkval-twitter/cljs/admin/gravatar.cljs", :line 5, :column 7, :end-line 5, :end-column 19, :arglists (quote ([email & {:keys [size], :or {size 80}}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(email {:keys [size], :or {size 80}})], :arglists ([email & {:keys [size], :or {size 80}}]), :arglists-meta (nil)}}, :name admin.gravatar/gravatar-img, :variadic true, :file "cljs/admin/gravatar.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(email {:keys [size], :or {size 80}})], :arglists ([email & {:keys [size], :or {size 80}}]), :arglists-meta (nil)}, :method-params [(email {:keys [size], :or {size 80}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists ([email & {:keys [size], :or {size 80}}])}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:alt :src :size :class :img}, :order [:size :img :src :alt :class]}, :doc nil}