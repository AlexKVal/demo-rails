version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.3.1-node-browsers
      - image: circleci/postgres:9.6.3-alpine

    working_directory: ~/alexkval-twitter

    parallelism: 4

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - altw-bundler-v1-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - altw-bundler-v1-{{ .Branch }}-
            - altw-bundler-v1-

      - run:
          name: install bundler dependencies
          command: |
            bundle install --without development \
                          --without production \
                          --deployment \
                          --jobs=4 \
                          --retry=3

      - save_cache:
          key: altw-bundler-v1-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            # the --deployment flag tells bundler to install here
            - vendor/bundle

      - run:
          name: Set up database
          environment:
            - RAILS_ENV: test
          command: bundle exec rake db:create db:schema:load

      # run tests!
      - run:
          name: run RSpec
          environment:
            - RAILS_ENV: test
            - RACK_ENV: test
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            "${TEST_FILES}"

      - run:
          name: run microtests
          environment:
            - RAILS_ENV: test
            - RACK_ENV: test
          command: bundle exec rails test

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
